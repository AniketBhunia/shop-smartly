{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n  }\n  productList() {\n    return this.http.get('http://localhost:8081/api/v1/product/all_products');\n  }\n  getProductByID(product_id) {\n    return this.http.get(`http://localhost:8081/api/v1/product/${product_id}`);\n  }\n  addProduct(productData, productImage) {\n    const formData = new FormData();\n    formData.append('product', productData);\n    formData.append('image', productImage);\n    // Define headers\n    // const headers = new HttpHeaders();\n    // headers.append('Content-Type', 'multipart/form-data'); // Make sure this matches the server's expected content type\n    // Send the FormData in the request\n    return this.http.post('http://localhost:8081/api/v1/product/add_product', formData);\n  }\n  updateProduct(product_id, productData, image) {\n    const formData = new FormData();\n    formData.append('productData', productData);\n    formData.append('image', image);\n    return this.http.put(`http://localhost:8081/api/v1/product/update_product/${product_id}`, formData);\n  }\n  deleteProduct(product_id) {\n    return this.http.delete(`http://localhost:8081/api/v1/delete_product/${product_id}`);\n  }\n  getProductBySellerId(seller_id) {\n    return this.http.get(`http://localhost:8081/api/v1/product/${seller_id}`);\n  }\n  popularProducts() {\n    return this.http.get('http://localhost:8081/api/v1/product?limit=8');\n  }\n  popularProductsForHome() {\n    return this.http.get('http://localhost:8081/api/v1/product?limit=7');\n  }\n  searchByName(name) {\n    return this.http.get(`http://localhost:8081/api/v1/product/search/${name}`);\n  }\n  searchByCategory(category) {\n    return this.http.get(`http://localhost:8081/api/v1/product/byCategory/${category}`);\n  }\n  searchByBrand(productBrand) {\n    return this.http.get(`http://localhost:8081/api/v1/product/byBrand/${productBrand}`);\n  }\n  addToWishlist(product) {\n    this.wishList.push(product.product_name, product.product_discount_price);\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;EAAe;EACvCC,WAAW;IACT,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAM,mDAAmD,CAAC;EAChF;EAEAC,cAAc,CAACC,UAAkB;IAC/B,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAM,wCAAwCE,UAAU,EAAE,CAAC;EACjF;EAEAC,UAAU,CAACC,WAAmB,EAAEC,YAAkB;IAChD,MAAMC,QAAQ,GAAa,IAAIC,QAAQ,EAAE;IACzCD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEJ,WAAW,CAAC;IACvCE,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,YAAY,CAAC;IAEtC;IACA;IACA;IAEA;IACA,OAAO,IAAI,CAACP,IAAI,CAACW,IAAI,CAAM,kDAAkD,EAAEH,QAAQ,CAAC;EAC1F;EACAI,aAAa,CAACR,UAAkB,EAACE,WAAkB,EAAEO,KAAU;IAC7D,MAAML,QAAQ,GAAa,IAAIC,QAAQ,EAAE;IACzCD,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEJ,WAAW,CAAC;IAC3CE,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEG,KAAK,CAAC;IAC/B,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAM,uDAAuDV,UAAU,EAAE,EAAEI,QAAQ,CAAC;EAC1G;EAEAO,aAAa,CAACX,UAAiB;IAC7B,OAAO,IAAI,CAACJ,IAAI,CAACgB,MAAM,CAAM,+CAA+CZ,UAAU,EAAE,CAAC;EAC3F;EAEAa,oBAAoB,CAACC,SAAgB;IACnC,OAAO,IAAI,CAAClB,IAAI,CAACE,GAAG,CAAM,wCAAwCgB,SAAS,EAAE,CAAC;EAChF;EAEAC,eAAe;IACb,OAAO,IAAI,CAACnB,IAAI,CAACE,GAAG,CAAM,8CAA8C,CAAC;EAC3E;EACAkB,sBAAsB;IACpB,OAAO,IAAI,CAACpB,IAAI,CAACE,GAAG,CAAM,8CAA8C,CAAC;EAC3E;EAEAmB,YAAY,CAACC,IAAU;IACrB,OAAO,IAAI,CAACtB,IAAI,CAACE,GAAG,CAAM,+CAA+CoB,IAAI,EAAE,CAAC;EAClF;EACAC,gBAAgB,CAACC,QAAc;IAC7B,OAAO,IAAI,CAACxB,IAAI,CAACE,GAAG,CAAM,mDAAmDsB,QAAQ,EAAE,CAAC;EAC1F;EACAC,aAAa,CAACC,YAAgB;IAC5B,OAAO,IAAI,CAAC1B,IAAI,CAACE,GAAG,CAAM,gDAAgDwB,YAAY,EAAE,CAAC;EAC3F;EACAC,aAAa,CAACC,OAAY;IACxB,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACF,OAAO,CAACG,YAAY,EAACH,OAAO,CAACI,sBAAsB,CAAC;EACzE;;AAxDWlC,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAmC,SAAdnC,cAAc;EAAAoC,YAFb;AAAM","names":["ProductService","constructor","http","productList","get","getProductByID","product_id","addProduct","productData","productImage","formData","FormData","append","post","updateProduct","image","put","deleteProduct","delete","getProductBySellerId","seller_id","popularProducts","popularProductsForHome","searchByName","name","searchByCategory","category","searchByBrand","productBrand","addToWishlist","product","wishList","push","product_name","product_discount_price","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\KIIT\\Desktop\\CapstoneDemoV3\\shop-smartly\\product-webapp\\webapp\\src\\app\\Services\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Product } from '../data.types';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  wishList !: Product []\r\n  constructor(private http:HttpClient) { }\r\n  productList() {\r\n    return this.http.get<any>('http://localhost:8081/api/v1/product/all_products');\r\n  }\r\n\r\n  getProductByID(product_id: string) {\r\n    return this.http.get<any>(`http://localhost:8081/api/v1/product/${product_id}`)\r\n  }\r\n  \r\n  addProduct(productData: string, productImage: File): Observable<any> {\r\n    const formData: FormData = new FormData();\r\n    formData.append('product', productData);\r\n    formData.append('image', productImage);\r\n\r\n    // Define headers\r\n    // const headers = new HttpHeaders();\r\n    // headers.append('Content-Type', 'multipart/form-data'); // Make sure this matches the server's expected content type\r\n\r\n    // Send the FormData in the request\r\n    return this.http.post<any>('http://localhost:8081/api/v1/product/add_product', formData);\r\n  }\r\n  updateProduct(product_id: number,productData:string ,image:File){\r\n    const formData: FormData = new FormData();\r\n    formData.append('productData', productData);\r\n    formData.append('image', image);\r\n    return this.http.put<any>(`http://localhost:8081/api/v1/product/update_product/${product_id}`, formData);\r\n  }\r\n\r\n  deleteProduct(product_id:number){\r\n    return this.http.delete<any>(`http://localhost:8081/api/v1/delete_product/${product_id}`)\r\n  }\r\n\r\n  getProductBySellerId(seller_id:number){\r\n    return this.http.get<any>(`http://localhost:8081/api/v1/product/${seller_id}`)\r\n  }\r\n\r\n  popularProducts() {\r\n    return this.http.get<any>('http://localhost:8081/api/v1/product?limit=8');\r\n  }\r\n  popularProductsForHome(){\r\n    return this.http.get<any>('http://localhost:8081/api/v1/product?limit=7');\r\n  }\r\n\r\n  searchByName(name : any ){\r\n    return this.http.get<any>(`http://localhost:8081/api/v1/product/search/${name}`)\r\n  }\r\n  searchByCategory(category : any ){\r\n    return this.http.get<any>(`http://localhost:8081/api/v1/product/byCategory/${category}`)\r\n  }\r\n  searchByBrand(productBrand:any){\r\n    return this.http.get<any>(`http://localhost:8081/api/v1/product/byBrand/${productBrand}`)\r\n  }\r\n  addToWishlist(product: any) {\r\n    this.wishList.push(product.product_name,product.product_discount_price);\r\n  }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
